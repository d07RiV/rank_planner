{"version":3,"sources":["utils.js","rank.js","honor.js","App.js","serviceWorker.js","index.js"],"names":["usePersistentState","key","defaultValue","React","useState","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","RankRP","BracketRP","RankPlanner","plan","setPlan","current","setCurrent","goal","setGoal","weeks","rp","push","length","adjust","Math","max","bracket","index","value","onChange","e","newPlan","slice","setBracket","parseInt","target","map","br","className","type","min","step","x","pos","toFixed","replace","formatNumber","rank","formatRp","HonorTable","certainty","defaultUsed","used","Object","entries","split","str","level","RankNames","horde","alliance","range","a","b","Array","v","i","HonorCap","setUsed","faction","setFaction","needed","setNeeded","hover","setHover","table","useMemo","result","honor","ph","console","log","methods","list","h","cap","prefix","nh","sort","name","title","classNames","includes","onClick","method","short","onMouseEnter","onMouseLeave","c","App","mode","setMode","active","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uSAEO,SAASA,EAAmBC,EAAKC,GAAe,IAAD,EAC1BC,IAAMC,UAC9B,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQP,MAAkC,oBAAjBC,EAA8BA,IAAiBA,MAFpD,mBAC7CO,EAD6C,KACtCC,EADsC,KAOpD,OAHAP,IAAMQ,WAAU,WACdJ,aAAaK,QAAQX,EAAKI,KAAKQ,UAAUJ,MACxC,CAACR,EAAKQ,IACF,CAACA,EAAOC,GAGV,ICTDI,EAAS,CAAC,EAAG,EAAG,IAAM,IAAM,IAAO,KAAO,IAAO,KAAO,IAAO,KAAO,IAAO,KAAO,IAAO,KAAO,KAClGC,EAAY,CAAC,EAAG,KAAO,KAAO,KAAO,IAAO,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAczF,SAASC,IAOtB,IAPqC,IAAD,EACZhB,EAAmB,OAAQ,IADf,mBAC7BiB,EAD6B,KACvBC,EADuB,OAENlB,EAAmB,UAAW,GAFxB,mBAE7BmB,EAF6B,KAEpBC,EAFoB,OAGZpB,EAAmB,OAAQ,IAHf,mBAG7BqB,EAH6B,KAGvBC,EAHuB,KAK9BC,EAAQ,GACVC,EAAKL,EACFK,EAAKV,EAAOO,IAAO,CACxBE,EAAME,KAAKD,GACPP,EAAKS,OAASH,EAAMG,QACtBT,EAAKQ,KAAK,GAEZ,IAAIE,EAASZ,EAAUE,EAAKM,EAAMG,OAAS,IAAW,GAALF,EAC7CG,EAAS,IACXA,EAASC,KAAKC,IAAIF,EAAS,GAAI,OAEjCH,GAAMG,EAERV,EAAKS,OAASH,EAAMG,OACpBH,EAAME,KAAKD,GAEX,IAAMM,EAAU,SAAAC,GACd,GAAIA,EAAQd,EAAKS,OAAQ,CAMvB,OACE,4BAAQM,MAAOf,EAAKc,GAAQE,SAAU,SAAAC,GAAC,OANtB,SAAAF,GACjB,IAAMG,EAAUlB,EAAKmB,QACrBD,EAAQJ,GAASC,EACjBd,EAAQiB,GAGmCE,CAAWC,SAASJ,EAAEK,OAAOP,UACrEjB,EAAUyB,KAAI,SAAChB,EAAIiB,GAAL,OAAY,4BAAQT,MAAOS,EAAIxC,IAAKwC,GAAKA,GAAM,YAIlE,MAAO,IAIX,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,UACb,6CAAkB,2BAAOC,KAAK,SAASC,IAAK,EAAGf,IAAK,IAAOgB,KAAM,EAAGb,MAAOb,EAASc,SAAU,SAAAC,GAAC,OAAId,EAAWkB,SAASJ,EAAEK,OAAOP,OAAS,QACzI,8CAAmB,2BAAOW,KAAK,SAASC,IAAK,EAAGf,IAAK,GAAIgB,KAAM,EAAGb,MAAOX,EAAMY,SAAU,SAAAC,GAAC,OAAIZ,EAAQgB,SAASJ,EAAEK,OAAOP,OAAS,SAEnI,+BACE,+BACE,4BACE,iCACA,kCACA,oCACA,yCAGJ,+BACGT,EAAMiB,KAAI,SAAChB,EAAIO,GAAL,OACT,wBAAI9B,IAAK8B,GACP,4BAAKA,GACL,4BD/Dc,SAACe,GAAD,IAAIC,EAAJ,uDAAU,EAAV,OAAgBD,EAAEE,QAAQD,GAAKE,QAAQ,wBAAyB,KC+DzEC,CAAa1B,IAClB,4BAtEG,SAAAA,GAEf,IADA,IAAI2B,EAAO,EACJA,EAAO,IAAM3B,GAAMV,EAAOqC,EAAO,IACtCA,GAAQ,EAEV,OAAa,KAATA,EACI,GAAN,OAAUA,GAEJ,GAAN,OAAUA,EAAV,cAAoB,KAAO3B,EAAKV,EAAOqC,KAAUrC,EAAOqC,EAAO,GAAKrC,EAAOqC,KAAQH,QAAQ,GAA3F,MA8DeI,CAAS5B,IACd,4BAAKM,EAAQC,W,gCCzErBsB,EAAa,CACjB,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GACpI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GACrJ,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GACrJ,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,QAAS,CAAC,GAAI,GACvK,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAC1K,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAChM,OAAQ,CAAC,GAAI,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GACnM,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GACvN,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GACvN,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAC1O,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAC1O,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAC7P,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,OAAQ,CAAC,IAAK,GAAI,QAAS,CAAC,IAAK,GAAI,QAAS,C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","file":"static/js/main.fb37310c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function usePersistentState(key, defaultValue) {\r\n  const [state, setState] = React.useState(\r\n    () => JSON.parse(localStorage.getItem(key)) || (typeof defaultValue === \"function\" ? defaultValue() : defaultValue)\r\n  );\r\n  React.useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n}\r\n\r\nexport const formatNumber = (x, pos = 0) => x.toFixed(pos).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n","import React from 'react';\r\nimport { usePersistentState, formatNumber } from './utils';\r\n\r\nconst RankRP = [0, 0, 2000, 5000, 10000, 15000, 20000, 25000, 30000, 35000, 40000, 45000, 50000, 55000, 60000];\r\nconst BracketRP = [0, 13000, 12000, 11000, 10000, 9000, 8000, 7000, 6000, 5000, 4000, 3000, 2000, 1000, 400];\r\n\r\nconst formatRp = rp => {\r\n  let rank = 0;\r\n  while (rank < 14 && rp >= RankRP[rank + 1]) {\r\n    rank += 1;\r\n  }\r\n  if (rank === 14) {\r\n    return `${rank}`;\r\n  } else {\r\n    return `${rank} (${(100 * (rp - RankRP[rank]) / (RankRP[rank + 1] - RankRP[rank])).toFixed(0)}%)`;\r\n  }\r\n}\r\n\r\nexport default function RankPlanner() {\r\n  const [plan, setPlan] = usePersistentState(\"plan\", []);\r\n  const [current, setCurrent] = usePersistentState(\"current\", 0);\r\n  const [goal, setGoal] = usePersistentState(\"goal\", 14);\r\n\r\n  const weeks = [];\r\n  let rp = current;\r\n  while (rp < RankRP[goal]) {\r\n    weeks.push(rp);\r\n    if (plan.length < weeks.length) {\r\n      plan.push(1);\r\n    }\r\n    let adjust = BracketRP[plan[weeks.length - 1]] - rp * 0.2;\r\n    if (adjust < 0) {\r\n      adjust = Math.max(adjust / 2, -2500);\r\n    }\r\n    rp += adjust;\r\n  }\r\n  plan.length = weeks.length;\r\n  weeks.push(rp);\r\n\r\n  const bracket = index => {\r\n    if (index < plan.length) {\r\n      const setBracket = value => {\r\n        const newPlan = plan.slice();\r\n        newPlan[index] = value;\r\n        setPlan(newPlan);\r\n      };\r\n      return (\r\n        <select value={plan[index]} onChange={e => setBracket(parseInt(e.target.value))}>\r\n          {BracketRP.map((rp, br) => <option value={br} key={br}>{br || \"None\"}</option>)}\r\n        </select>\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"RankPlanner\">\r\n      <div className=\"header\">\r\n        <span>Current RP: <input type=\"number\" min={0} max={60000} step={1} value={current} onChange={e => setCurrent(parseInt(e.target.value || 0))}/></span>\r\n        <span>Target rank: <input type=\"number\" min={2} max={14} step={1} value={goal} onChange={e => setGoal(parseInt(e.target.value || 0))}/></span>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>RP</th>\r\n            <th>Rank</th>\r\n            <th>Bracket</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {weeks.map((rp, index) => (\r\n            <tr key={index}>\r\n              <td>{index}</td>\r\n              <td>{formatNumber(rp)}</td>\r\n              <td>{formatRp(rp)}</td>\r\n              <td>{bracket(index)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { usePersistentState } from './utils';\r\n\r\nconst HonorTable = {\r\n  \"48,1\": [32, 2], \"48,2\": [34, 0], \"48,3\": [36, 0], \"48,4\": [38, 0], \"48,5\": [40, 0], \"48,6\": [42, 0], \"48,7\": [44, 0], \"48,8\": [47, 0],\r\n  \"49,1\": [40, 2], \"49,2\": [42, 2], \"49,3\": [44, 0], \"49,4\": [47, 0], \"49,5\": [49, 0], \"49,6\": [52, 0], \"49,7\": [55, 0], \"49,8\": [58, 0], \"49,9\": [61, 0],\r\n  \"50,1\": [49, 2], \"50,2\": [52, 0], \"50,3\": [55, 2], \"50,4\": [58, 0], \"50,5\": [61, 0], \"50,6\": [65, 0], \"50,7\": [68, 0], \"50,8\": [72, 0], \"50,9\": [76, 0],\r\n  \"51,1\": [59, 2], \"51,2\": [62, 0], \"51,3\": [66, 0], \"51,4\": [69, 0], \"51,5\": [73, 0], \"51,6\": [77, 0], \"51,7\": [82, 0], \"51,8\": [86, 0], \"51,9\": [91, 0], \"51,10\": [96, 0],\r\n  \"52,1\": [70, 2], \"52,2\": [74, 0], \"52,3\": [78, 0], \"52,4\": [82, 0], \"52,5\": [87, 0], \"52,6\": [92, 0], \"52,7\": [97, 0], \"52,8\": [102, 0], \"52,9\": [108, 0], \"52,10\": [114, 0],\r\n  \"53,1\": [82, 2], \"53,2\": [87, 1], \"53,3\": [91, 0], \"53,4\": [96, 0], \"53,5\": [102, 0], \"53,6\": [107, 0], \"53,7\": [113, 0], \"53,8\": [120, 0], \"53,9\": [126, 0], \"53,10\": [133, 0], \"53,11\": [141, 0],\r\n  \"54,1\": [95, 2], \"54,2\": [100, 2], \"54,3\": [106, 1], \"54,4\": [111, 0], \"54,5\": [118, 0], \"54,6\": [124, 0], \"54,7\": [131, 0], \"54,8\": [138, 0], \"54,9\": [146, 0], \"54,10\": [154, 0], \"54,11\": [163, 0],\r\n  \"55,1\": [109, 2], \"55,2\": [115, 2], \"55,3\": [121, 2], \"55,4\": [128, 0], \"55,5\": [135, 0], \"55,6\": [142, 0], \"55,7\": [150, 0], \"55,8\": [159, 0], \"55,9\": [166, 0], \"55,10\": [177, 0], \"55,11\": [186, 0], \"55,12\": [197, 0],\r\n  \"56,1\": [124, 2], \"56,2\": [131, 2], \"56,3\": [138, 0], \"56,4\": [146, 0], \"56,5\": [154, 0], \"56,6\": [163, 0], \"56,7\": [172, 0], \"56,8\": [181, 0], \"56,9\": [191, 0], \"56,10\": [202, 0], \"56,11\": [213, 0], \"56,12\": [225, 0],\r\n  \"57,1\": [141, 2], \"57,2\": [148, 2], \"57,3\": [156, 0], \"57,4\": [165, 0], \"57,5\": [174, 0], \"57,6\": [184, 0], \"57,7\": [194, 0], \"57,8\": [205, 0], \"57,9\": [216, 0], \"57,10\": [228, 0], \"57,11\": [241, 0], \"57,12\": [254, 0], \"57,13\": [268, 0],\r\n  \"58,1\": [159, 2], \"58,2\": [168, 0], \"58,3\": [176, 2], \"58,4\": [186, 0], \"58,5\": [196, 0], \"58,6\": [207, 0], \"58,7\": [218, 0], \"58,8\": [231, 0], \"58,9\": [243, 0], \"58,10\": [257, 0], \"58,11\": [271, 0], \"58,12\": [286, 0], \"58,13\": [302, 0],\r\n  \"59,1\": [178, 2], \"59,2\": [188, 2], \"59,3\": [198, 0], \"59,4\": [209, 0], \"59,5\": [221, 0], \"59,6\": [233, 0], \"59,7\": [246, 0], \"59,8\": [260, 0], \"59,9\": [274, 0], \"59,10\": [290, 0], \"59,11\": [306, 0], \"59,12\": [323, 0], \"59,13\": [341, 0], \"59,14\": [360, 0],\r\n  \"60,1\": [199, 2], \"60,2\": [210, 2], \"60,3\": [221, 2], \"60,4\": [233, 2], \"60,5\": [246, 2], \"60,6\": [260, 2], \"60,7\": [274, 2], \"60,8\": [289, 2], \"60,9\": [305, 1], \"60,10\": [321, 2], \"60,11\": [339, 2], \"60,12\": [358, 2], \"60,13\": [377, 2], \"60,14\": [398, 2],\r\n};\r\nconst certainty = [\"uncertain\", \"probably\", \"confirmed\"];\r\nconst defaultUsed = () => {\r\n  const used = {};\r\n  for (const [key, [, certainty]] of Object.entries(HonorTable)) {\r\n    const [level, rank] = key.split(\",\").map(str => parseInt(str));\r\n    if (certainty === 2 && (level === 60 || rank === 1)) {\r\n      used[key] = true;\r\n    }\r\n  }\r\n  return used;\r\n};\r\n\r\nconst RankH = [\"Scout\", \"Grunt\", \"Sergeant\", \"Senior Sergeant\", \"First Sergeant\", \"Stone Guard\", \"Blood Guard\", \"Legionnaire\", \"Centurion\", \"Champion\", \"Lieutenant General\", \"General\", \"Warlord\", \"High Warlord\"];\r\nconst RankA = [\"Private\", \"Corporal\", \"Sergeant\", \"Master Sergeant\", \"Sergeant Major\", \"Knight\", \"Knight-Lieutenant\", \"Knight-Captain\", \"Knight-Champion\", \"Lieutenant Commander\", \"Commander\", \"Marshal\", \"Field Marshal\", \"Grand Marshal\"];\r\nconst RankNames = {horde: RankH, alliance: RankA};\r\n\r\nconst range = (a, b) => [...Array(b - a + 1)].map((v, i) => a + i);\r\nconst MaxHonor = 400;\r\n\r\nexport default function HonorCap() {\r\n  const [used, setUsed] = usePersistentState(\"honorUsed\", defaultUsed);\r\n  const [faction, setFaction] = usePersistentState(\"faction\", \"horde\");\r\n  const [needed, setNeeded] = usePersistentState(\"needed\", 0);\r\n  if (needed > MaxHonor) {\r\n    setNeeded(MaxHonor);\r\n  }\r\n  const [hover, setHover] = React.useState([]);\r\n\r\n  const table = React.useMemo(() => {\r\n    const result = range(0, MaxHonor).map(() => []);\r\n    for (let [key, [honor]] of Object.entries(HonorTable)) {\r\n      if (used[key]) {\r\n        for (let ph = 0; ph + honor <= MaxHonor; ++ph) {\r\n          if (ph === 0 || result[ph].length) {\r\n            result[ph + honor].push(honor);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(result, used);\r\n    return result;\r\n  }, [used]);\r\n\r\n  const [honor, methods] = React.useMemo(() => {\r\n    let honor = needed;\r\n    while (honor > 0 && (!table[honor] || !table[honor].length)) {\r\n      --honor;\r\n    }\r\n    const methods = [];\r\n    const list = (h, cap, prefix) => {\r\n      if (h === 0) {\r\n        methods.push(prefix);\r\n        return;\r\n      }\r\n      for (let nh of table[h]) {\r\n        if (nh <= cap) {\r\n          list(h - nh, nh, [...prefix, nh]);\r\n        }\r\n      }\r\n    };\r\n    list(honor, MaxHonor, []);\r\n    methods.sort((a, b) => {\r\n      for (let i = 0; i < a.length || i < b.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n          return (b[i] || 0) - (a[i] || 0);\r\n        }\r\n      }\r\n      return 0;\r\n    });\r\n    return [honor, methods];\r\n  }, [table, needed]);\r\n\r\n  return (\r\n    <div className=\"HonorCap\">\r\n      <table className=\"honorTable\">\r\n        <thead>\r\n          <tr>\r\n            <th><select value={faction} onChange={e => setFaction(e.target.value)}><option value=\"horde\">Horde</option><option value=\"alliance\">Alliance</option></select></th>\r\n            {RankNames[faction].map((name, index) => <th key={index}><span title={name}>{name}</span></th>)}\r\n          </tr>\r\n          <tr>\r\n            <th>Level</th>\r\n            {RankNames[faction].map((name, index) => <th key={index}>{index + 1}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {range(48, 60).map(level => (\r\n            <tr key={level}>\r\n              <td>{level}</td>\r\n              {range(1, 14).map(rank => {\r\n                const key = `${level},${rank}`;\r\n                const value = HonorTable[key];\r\n                if (value) {\r\n                  const toggle = () => setUsed({...used, [key]: !used[key]});\r\n                  return <td key={rank} className={classNames(certainty[value[1]], {used: used[key], hover: hover.includes(value[0])})} title={certainty[value[1]]} onClick={toggle}>{value[0]}</td>\r\n                } else {\r\n                  return <td key={rank}/>;\r\n                }\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div>Honor needed: <input type=\"number\" min={0} max={MaxHonor} step={1} value={needed} onChange={e => setNeeded(parseInt(e.target.value || 0))}/>\r\n        {honor < needed && <span className=\"warning\">(closest possible honor: {honor})</span>}\r\n      </div>\r\n      <div className=\"results\">\r\n        <ul>\r\n          {methods.map((method, index) => {\r\n            const short = [];\r\n            for (let h of method) {\r\n              if (short.length && short[short.length - 1][0] === h) {\r\n                short[short.length - 1][1] += 1;\r\n              } else {\r\n                short.push([h, 1]);\r\n              }\r\n            }\r\n            return (\r\n              <li key={index} onMouseEnter={() => setHover(method)} onMouseLeave={() => setHover([])}>\r\n                {short.map(([h, c], i) => (\r\n                  <span key={h}>{i > 0 && \" + \"}{h}{c > 1 && ` x${c}`}</span>\r\n                ))}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './App.scss';\r\n\r\nimport RankPlanner from './rank';\r\nimport HonorCap from './honor';\r\n\r\nfunction App() {\r\n  const [mode, setMode] = React.useState(\"rank\");\r\n  return (\r\n    <div className=\"App\">\r\n      <ul className=\"tabs\">\r\n        <li className={classNames({active: mode === \"rank\"})} onClick={() => setMode(\"rank\")}>\r\n          Rank Planner\r\n        </li>\r\n        <li className={classNames({active: mode === \"honor\"})} onClick={() => setMode(\"honor\")}>\r\n          Honor Cap\r\n        </li>\r\n      </ul>\r\n      {mode === \"rank\" && <RankPlanner/>}\r\n      {mode === \"honor\" && <HonorCap/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}